import AsyncStorage from "@react-native-async-storage/async-storage";

const BOOKS = "@MyBooks:books";
const SAMPLE_LOADED_KEY = "@MyBooks:sample_loaded";

// get all the favorite books 
export const getFavorites = async () => {
    try {
        const favoritesList = await AsyncStorage.getItem(BOOKS);
        return favoritesList ? JSON.parse(favoritesList) : [];
    } catch (error) {
        console.error ('Cannot load the favorite list:', error);
        return []; 
    }
}

// add books to favorite list, if the books is already in the list, return to current list 
export const addFavorite = async (book) => {
    try {
        const favorites = await getFavorites();

        // check if book already existed
        if (!favorites.some(fav => fav.id === book.id)) {
            const updatedFavorites = [...favorites, book];
            await AsyncStorage.setItem(BOOKS, JSON.stringify(updatedFavorites));
            return updatedFavorites;
        }
        return favorites; 
    } catch  (error) {
        console.error('Add favorite fail:' ,error);
        throw error;
    }
}; 

// remove book from favorite 
export const removeFavorite = async (id) => {
    try {
        const favorites = await getFavorites(); 
        const updatedFavorites = favorites.filter(book => book.id !== id);
        await AsyncStorage.setItem(BOOKS, JSON.stringify(updatedFavorites));
        return updatedFavorites;
    } catch (error) {
        console.error ('Remove favorite book unsuccessfully:', error);
        throw error;
    }
}; 

// reload sample books when the app is first launched
export const preloadSampleBooks = async () => {
    try {
        // check if sample books have already been loaded
        const sampleLoaded = await AsyncStorage.getItem(SAMPLE_LOADED_KEY);
        if (sampleLoaded) return; 
        
        const existingFavorites = await getFavorites();
        
        // only add sample books that are not in favorites
        // this list is generated by AI
        const sampleFavorites = [
            {
                id: "sJf1vQAACAAJ",
                title: "The Great Gatsby",
                authors: ["F. Scott Fitzgerald"],
                thumbnail: "http://books.google.com/books/content?id=sJf1vQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "O7s5DwAAQBAJ", 
                title: "To Kill a Mockingbird",
                authors: ["Harper Lee"],
                thumbnail: "http://books.google.com/books/content?id=O7s5DwAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "d7gMAAAAYAAJ", 
                title: "1984",
                authors: ["George Orwell"],
                thumbnail: "http://books.google.com/books/content?id=d7gMAAAAYAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "1yxJtgEACAAJ", 
                title: "The Hobbit",
                authors: ["J.R.R. Tolkien"],
                thumbnail: "http://books.google.com/books/content?id=1yxJtgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "rN5HDwAAQBAJ", 
                title: "Pride and Prejudice",
                authors: ["Jane Austen"],
                thumbnail: "http://books.google.com/books/content?id=rN5HDwAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "YyXoAAAACAAJ", 
                title: "The Catcher in the Rye",
                authors: ["J.D. Salinger"],
                thumbnail: "http://books.google.com/books/content?id=YyXoAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "MQFvDQAAQBAJ", 
                title: "Harry Potter and the Philosopher's Stone",
                authors: ["J.K. Rowling"],
                thumbnail: "http://books.google.com/books/content?id=MQFvDQAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "DqLPAAAAMAAJ",
                title: "The Lord of the Rings",
                authors: ["J.R.R. Tolkien"],
                thumbnail: "http://books.google.com/books/content?id=DqLPAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "z7xVkAEACAAJ", 
                title: "The Hunger Games",
                authors: ["Suzanne Collins"],
                thumbnail: "http://books.google.com/books/content?id=z7xVkAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            },
            {
                id: "HUzDDwAAQBAJ", 
                title: "The Alchemist",
                authors: ["Paulo Coelho"],
                thumbnail: "http://books.google.com/books/content?id=HUzDDwAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
            }
        ];
        
        const booksAdd = sampleFavorites.filter(
            sampleBook => !existingFavorites.some(fav => fav.id === sampleBook.id)
        );
        
        if (booksAdd.length > 0) {
            const updatedFavorites = [...existingFavorites, ...booksAdd];
            await AsyncStorage.setItem(BOOKS, JSON.stringify(updatedFavorites));
        }
        
        // Mark sample books as loaded
        await AsyncStorage.setItem(SAMPLE_LOADED_KEY, "true");
        
    } catch (error) {
        console.error('Sample books cannot load:', error);
        throw error;
    }
}; 